// <auto-generated />
using System;
using ExpenseTracker.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExpenseTracker.Migrations
{
    [DbContext(typeof(ExpenseTrackerDbContext))]
    partial class ExpenseTrackerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExpenseTracker.Data.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRecurrent")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Expenses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 150.75m,
                            Category = "Food",
                            Currency = "SEK",
                            Date = new DateTime(2024, 8, 7, 1, 53, 3, 563, DateTimeKind.Local).AddTicks(5992),
                            IsRecurrent = false,
                            Name = "Groceries",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 80.50m,
                            Category = "Utilities",
                            Currency = "SEK",
                            Date = new DateTime(2024, 8, 12, 1, 53, 3, 563, DateTimeKind.Local).AddTicks(5997),
                            IsRecurrent = false,
                            Name = "Electricity Bill",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Amount = 45.00m,
                            Category = "Health",
                            Currency = "SEK",
                            Date = new DateTime(2024, 7, 17, 1, 53, 3, 563, DateTimeKind.Local).AddTicks(6001),
                            IsRecurrent = false,
                            Name = "Gym Membership",
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            Amount = 60.00m,
                            Category = "Utilities",
                            Currency = "SEK",
                            Date = new DateTime(2024, 8, 14, 1, 53, 3, 563, DateTimeKind.Local).AddTicks(6007),
                            IsRecurrent = false,
                            Name = "Internet Bill",
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            Amount = 5.50m,
                            Category = "Food",
                            Currency = "SEK",
                            Date = new DateTime(2024, 8, 16, 1, 53, 3, 563, DateTimeKind.Local).AddTicks(6011),
                            IsRecurrent = false,
                            Name = "Coffee",
                            UserId = 3
                        },
                        new
                        {
                            Id = 6,
                            Amount = 12.00m,
                            Category = "Entertainment",
                            Currency = "SEK",
                            Date = new DateTime(2024, 8, 15, 1, 53, 3, 563, DateTimeKind.Local).AddTicks(6015),
                            IsRecurrent = false,
                            Name = "Movie Ticket",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("ExpenseTracker.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 8, 17, 1, 53, 3, 563, DateTimeKind.Local).AddTicks(5843),
                            Email = "johndoe@example.com",
                            Password = "hashedpassword1",
                            UpdatedAt = new DateTime(2024, 8, 17, 1, 53, 3, 563, DateTimeKind.Local).AddTicks(5898),
                            UserName = "johndoe"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 8, 17, 1, 53, 3, 563, DateTimeKind.Local).AddTicks(5901),
                            Email = "janedoe@example.com",
                            Password = "hashedpassword2",
                            UpdatedAt = new DateTime(2024, 8, 17, 1, 53, 3, 563, DateTimeKind.Local).AddTicks(5902),
                            UserName = "janedoe"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 8, 17, 1, 53, 3, 563, DateTimeKind.Local).AddTicks(5904),
                            Email = "bobsmith@example.com",
                            Password = "hashedpassword3",
                            UpdatedAt = new DateTime(2024, 8, 17, 1, 53, 3, 563, DateTimeKind.Local).AddTicks(5906),
                            UserName = "bobsmith"
                        });
                });

            modelBuilder.Entity("ExpenseTracker.Data.Expense", b =>
                {
                    b.HasOne("ExpenseTracker.Data.User", "User")
                        .WithMany("Expenses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ExpenseTracker.Data.User", b =>
                {
                    b.Navigation("Expenses");
                });
#pragma warning restore 612, 618
        }
    }
}
